<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mappers.UserMessageMapper">

	<!--实体映射-->
	<resultMap id="base_result_map" type="com.example.demo.entity.po.UserMessage">
		<!--自增ID-->
		<id column="message_id" property="messageId"  />
		<!--接收人用户ID-->
		<result column="received_user_id" property="receivedUserId"  />
		<!--文章ID-->
		<result column="article_id" property="articleId"  />
		<!--文章标题-->
		<result column="article_title" property="articleTitle"  />
		<!--评论ID-->
		<result column="comment_id" property="commentId"  />
		<!--发送人用户ID-->
		<result column="send_user_id" property="sendUserId"  />
		<!--发送人昵称-->
		<result column="send_nick_name" property="sendNickName"  />
		<!--0:系统消息 1:评论 2:文章点赞  3:评论点赞 4:附件下载-->
		<result column="message_type" property="messageType"  />
		<!--消息内容-->
		<result column="message_content" property="messageContent"  />
		<!--1:未读 2:已读-->
		<result column="status" property="status"  />
		<!--创建时间-->
		<result column="create_time" property="createTime"  />
	</resultMap>


	<!-- 通用查询结果列-->
	<sql id="base_column_list">
		 message_id,received_user_id,article_id,article_title,comment_id,
		 send_user_id,send_nick_name,message_type,message_content,status,
		 create_time
	</sql>

	<sql id="base_condition_filed">
			<if test="query.messageId != null">
				 and  message_id = #{query.messageId}
			</if>
			<if test="query.receivedUserId != null and query.receivedUserId!=''">
				 and  received_user_id = #{query.receivedUserId}
			</if>
			<if test="query.articleId != null and query.articleId!=''">
				 and  article_id = #{query.articleId}
			</if>
			<if test="query.articleTitle != null and query.articleTitle!=''">
				 and  article_title = #{query.articleTitle}
			</if>
			<if test="query.commentId != null">
				 and  comment_id = #{query.commentId}
			</if>
			<if test="query.sendUserId != null and query.sendUserId!=''">
				 and  send_user_id = #{query.sendUserId}
			</if>
			<if test="query.sendNickName != null and query.sendNickName!=''">
				 and  send_nick_name = #{query.sendNickName}
			</if>
			<if test="query.messageType != null">
				 and  message_type = #{query.messageType}
			</if>
			<if test="query.messageContent != null and query.messageContent!=''">
				 and  message_content = #{query.messageContent}
			</if>
			<if test="query.status != null">
				 and  status = #{query.status}
			</if>
			<if test="query.createTime != null and query.createTime!=''">
				 <![CDATA[ and  create_time=str_to_date(#{query.createTime}, '%Y-%m-%d') ]]>
			</if>
	</sql>
	<!-- 通用条件列-->
	<sql id="base_condition">
	 <where>
		 <include refid="base_condition_filed" />
	 </where>
	</sql>

	<!-- 通用查询条件列-->
	<sql id="query_condition">
	 <where>
			<include refid="base_condition_filed" />
			<if test="query.receivedUserIdFuzzy!= null  and query.receivedUserIdFuzzy!=''">
				 and  received_user_id like concat('%', #{query.receivedUserIdFuzzy}, '%')
			</if>
			<if test="query.articleIdFuzzy!= null  and query.articleIdFuzzy!=''">
				 and  article_id like concat('%', #{query.articleIdFuzzy}, '%')
			</if>
			<if test="query.articleTitleFuzzy!= null  and query.articleTitleFuzzy!=''">
				 and  article_title like concat('%', #{query.articleTitleFuzzy}, '%')
			</if>
			<if test="query.sendUserIdFuzzy!= null  and query.sendUserIdFuzzy!=''">
				 and  send_user_id like concat('%', #{query.sendUserIdFuzzy}, '%')
			</if>
			<if test="query.sendNickNameFuzzy!= null  and query.sendNickNameFuzzy!=''">
				 and  send_nick_name like concat('%', #{query.sendNickNameFuzzy}, '%')
			</if>
			<if test="query.messageContentFuzzy!= null  and query.messageContentFuzzy!=''">
				 and  message_content like concat('%', #{query.messageContentFuzzy}, '%')
			</if>
			<if test="query.createTimeStart!= null and query.createTimeStart!=''">
				 <![CDATA[ and  create_time>=str_to_date(#{query.createTimeStart}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.createTimeEnd!= null and query.createTimeEnd!=''">
				 <![CDATA[ and  create_time< date_sub(str_to_date(#{query.createTimeEnd},'%Y-%m-%d'),interval -1 day) ]]>
			</if>
	 </where>
	</sql>

	<!-- 查询集合-->
	<select id="selectList" resultMap="base_result_map" >
		 SELECT <include refid="base_column_list" /> FROM user_message <include refid="query_condition" />
		 <if test="query.orderBy!=null">
			 order by ${query.orderBy}
		 </if>
		 <if test="query.simplePage!=null">
			 limit #{query.simplePage.start},#{query.simplePage.end}
		 </if>
	</select>

	<!-- 查询数量-->
	<select id="selectCount" resultType="java.lang.Integer" >
		 SELECT count(1) FROM user_message <include refid="query_condition" />
	</select>

	<!-- 插入 （匹配有值的字段）-->
	<insert id="insert" parameterType="com.example.demo.entity.po.UserMessage">
		<selectKey keyProperty="bean.messageId" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		 INSERT INTO user_message
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="bean.receivedUserId != null">
				 received_user_id,
			</if>
			<if test="bean.articleId != null">
				 article_id,
			</if>
			<if test="bean.articleTitle != null">
				 article_title,
			</if>
			<if test="bean.commentId != null">
				 comment_id,
			</if>
			<if test="bean.sendUserId != null">
				 send_user_id,
			</if>
			<if test="bean.sendNickName != null">
				 send_nick_name,
			</if>
			<if test="bean.messageType != null">
				 message_type,
			</if>
			<if test="bean.messageContent != null">
				 message_content,
			</if>
			<if test="bean.status != null">
				 status,
			</if>
			<if test="bean.createTime != null">
				 create_time,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="bean.receivedUserId!=null">
				 #{bean.receivedUserId},
			</if>
			<if test="bean.articleId!=null">
				 #{bean.articleId},
			</if>
			<if test="bean.articleTitle!=null">
				 #{bean.articleTitle},
			</if>
			<if test="bean.commentId!=null">
				 #{bean.commentId},
			</if>
			<if test="bean.sendUserId!=null">
				 #{bean.sendUserId},
			</if>
			<if test="bean.sendNickName!=null">
				 #{bean.sendNickName},
			</if>
			<if test="bean.messageType!=null">
				 #{bean.messageType},
			</if>
			<if test="bean.messageContent!=null">
				 #{bean.messageContent},
			</if>
			<if test="bean.status!=null">
				 #{bean.status},
			</if>
			<if test="bean.createTime!=null">
				 #{bean.createTime},
			</if>
		 </trim>
	</insert>

	<!-- 插入或者更新 （匹配有值的字段）-->
	<insert id="insertOrUpdate" parameterType="com.example.demo.entity.po.UserMessage">
		 INSERT INTO user_message
		 <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.messageId != null">
				 message_id,
			</if>
			<if test="bean.receivedUserId != null">
				 received_user_id,
			</if>
			<if test="bean.articleId != null">
				 article_id,
			</if>
			<if test="bean.articleTitle != null">
				 article_title,
			</if>
			<if test="bean.commentId != null">
				 comment_id,
			</if>
			<if test="bean.sendUserId != null">
				 send_user_id,
			</if>
			<if test="bean.sendNickName != null">
				 send_nick_name,
			</if>
			<if test="bean.messageType != null">
				 message_type,
			</if>
			<if test="bean.messageContent != null">
				 message_content,
			</if>
			<if test="bean.status != null">
				 status,
			</if>
			<if test="bean.createTime != null">
				 create_time,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.messageId!=null">
				 #{bean.messageId},
			</if>
			<if test="bean.receivedUserId!=null">
				 #{bean.receivedUserId},
			</if>
			<if test="bean.articleId!=null">
				 #{bean.articleId},
			</if>
			<if test="bean.articleTitle!=null">
				 #{bean.articleTitle},
			</if>
			<if test="bean.commentId!=null">
				 #{bean.commentId},
			</if>
			<if test="bean.sendUserId!=null">
				 #{bean.sendUserId},
			</if>
			<if test="bean.sendNickName!=null">
				 #{bean.sendNickName},
			</if>
			<if test="bean.messageType!=null">
				 #{bean.messageType},
			</if>
			<if test="bean.messageContent!=null">
				 #{bean.messageContent},
			</if>
			<if test="bean.status!=null">
				 #{bean.status},
			</if>
			<if test="bean.createTime!=null">
				 #{bean.createTime},
			</if>
		 </trim>
		 on DUPLICATE key update 
		 <trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.receivedUserId!=null">
				 received_user_id = VALUES(received_user_id),
			</if>
			<if test="bean.articleId!=null">
				 article_id = VALUES(article_id),
			</if>
			<if test="bean.articleTitle!=null">
				 article_title = VALUES(article_title),
			</if>
			<if test="bean.commentId!=null">
				 comment_id = VALUES(comment_id),
			</if>
			<if test="bean.sendUserId!=null">
				 send_user_id = VALUES(send_user_id),
			</if>
			<if test="bean.sendNickName!=null">
				 send_nick_name = VALUES(send_nick_name),
			</if>
			<if test="bean.messageType!=null">
				 message_type = VALUES(message_type),
			</if>
			<if test="bean.messageContent!=null">
				 message_content = VALUES(message_content),
			</if>
			<if test="bean.status!=null">
				 status = VALUES(status),
			</if>
			<if test="bean.createTime!=null">
				 create_time = VALUES(create_time),
			</if>
		 </trim>
	</insert>

	<!-- 添加 （批量插入）-->
	<insert id="insertBatch" parameterType="com.example.demo.entity.po.UserMessage" useGeneratedKeys="true" keyProperty="messageId">
		 INSERT INTO user_message(
			 received_user_id,
			 article_id,
			 article_title,
			 comment_id,
			 send_user_id,
			 send_nick_name,
			 message_type,
			 message_content,
			 status,
			 create_time
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.receivedUserId},
				 #{item.articleId},
				 #{item.articleTitle},
				 #{item.commentId},
				 #{item.sendUserId},
				 #{item.sendNickName},
				 #{item.messageType},
				 #{item.messageContent},
				 #{item.status},
				 #{item.createTime}
			 )
		 </foreach>
	</insert>

	<!-- 批量新增修改 （批量插入）-->
	<insert id="insertOrUpdateBatch" parameterType="com.example.demo.entity.po.UserMessage">
		 INSERT INTO user_message(
			 received_user_id,
			 article_id,
			 article_title,
			 comment_id,
			 send_user_id,
			 send_nick_name,
			 message_type,
			 message_content,
			 status,
			 create_time
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.receivedUserId},
				 #{item.articleId},
				 #{item.articleTitle},
				 #{item.commentId},
				 #{item.sendUserId},
				 #{item.sendNickName},
				 #{item.messageType},
				 #{item.messageContent},
				 #{item.status},
				 #{item.createTime}
			 )
		 </foreach>
			on DUPLICATE key update 
			received_user_id = VALUES(received_user_id),
			article_id = VALUES(article_id),
			article_title = VALUES(article_title),
			comment_id = VALUES(comment_id),
			send_user_id = VALUES(send_user_id),
			send_nick_name = VALUES(send_nick_name),
			message_type = VALUES(message_type),
			message_content = VALUES(message_content),
			status = VALUES(status),
			create_time = VALUES(create_time)
	</insert>

	<!--多条件修改-->
	<update id="updateByParam" parameterType="com.example.demo.entity.query.UserMessageQuery">
		 UPDATE user_message
 		 <set> 
			<if test="bean.receivedUserId != null">
				 received_user_id = #{bean.receivedUserId},
			</if>
			<if test="bean.articleId != null">
				 article_id = #{bean.articleId},
			</if>
			<if test="bean.articleTitle != null">
				 article_title = #{bean.articleTitle},
			</if>
			<if test="bean.commentId != null">
				 comment_id = #{bean.commentId},
			</if>
			<if test="bean.sendUserId != null">
				 send_user_id = #{bean.sendUserId},
			</if>
			<if test="bean.sendNickName != null">
				 send_nick_name = #{bean.sendNickName},
			</if>
			<if test="bean.messageType != null">
				 message_type = #{bean.messageType},
			</if>
			<if test="bean.messageContent != null">
				 message_content = #{bean.messageContent},
			</if>
			<if test="bean.status != null">
				 status = #{bean.status},
			</if>
			<if test="bean.createTime != null">
				 create_time = #{bean.createTime},
			</if>
 		 </set>
 		 <include refid="query_condition" />
	</update>

	<!--多条件删除-->
	<delete id="deleteByParam">
		 delete from user_message
 		 <include refid="query_condition" />
	</delete>

	<!-- 根据MessageId修改-->
	<update id="updateByMessageId" parameterType="com.example.demo.entity.po.UserMessage">
		 UPDATE user_message
 		 <set> 
			<if test="bean.receivedUserId != null">
				 received_user_id = #{bean.receivedUserId},
			</if>
			<if test="bean.articleId != null">
				 article_id = #{bean.articleId},
			</if>
			<if test="bean.articleTitle != null">
				 article_title = #{bean.articleTitle},
			</if>
			<if test="bean.commentId != null">
				 comment_id = #{bean.commentId},
			</if>
			<if test="bean.sendUserId != null">
				 send_user_id = #{bean.sendUserId},
			</if>
			<if test="bean.sendNickName != null">
				 send_nick_name = #{bean.sendNickName},
			</if>
			<if test="bean.messageType != null">
				 message_type = #{bean.messageType},
			</if>
			<if test="bean.messageContent != null">
				 message_content = #{bean.messageContent},
			</if>
			<if test="bean.status != null">
				 status = #{bean.status},
			</if>
			<if test="bean.createTime != null">
				 create_time = #{bean.createTime},
			</if>
 		 </set>
 		 where message_id=#{messageId}
	</update>

	<!-- 根据MessageId删除-->
	<delete id="deleteByMessageId">
		delete from user_message where message_id=#{messageId}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByMessageId" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from user_message where message_id=#{messageId}
	</select>

	<!-- 根据ArticleIdAndCommentIdAndSendUserIdAndMessageType修改-->
	<update id="updateByArticleIdAndCommentIdAndSendUserIdAndMessageType" parameterType="com.example.demo.entity.po.UserMessage">
		 UPDATE user_message
 		 <set> 
			<if test="bean.receivedUserId != null">
				 received_user_id = #{bean.receivedUserId},
			</if>
			<if test="bean.articleTitle != null">
				 article_title = #{bean.articleTitle},
			</if>
			<if test="bean.sendNickName != null">
				 send_nick_name = #{bean.sendNickName},
			</if>
			<if test="bean.messageContent != null">
				 message_content = #{bean.messageContent},
			</if>
			<if test="bean.status != null">
				 status = #{bean.status},
			</if>
			<if test="bean.createTime != null">
				 create_time = #{bean.createTime},
			</if>
 		 </set>
 		 where article_id=#{articleId} and comment_id=#{commentId} and send_user_id=#{sendUserId} and message_type=#{messageType}
	</update>

	<!-- 根据ArticleIdAndCommentIdAndSendUserIdAndMessageType删除-->
	<delete id="deleteByArticleIdAndCommentIdAndSendUserIdAndMessageType">
		delete from user_message where article_id=#{articleId} and comment_id=#{commentId} and send_user_id=#{sendUserId} and message_type=#{messageType}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByArticleIdAndCommentIdAndSendUserIdAndMessageType" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from user_message where article_id=#{articleId} and comment_id=#{commentId} and send_user_id=#{sendUserId} and message_type=#{messageType}
	</select>

</mapper>